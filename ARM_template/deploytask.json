{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "String",
      "defaultValue": "admin",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "defaultValue": "@dminPassw0rd",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    }
  },
  "variables": {
    "StorageAccountName1": "spektraeastusstorage",
    "StorageAccountName2": "spektrawestusstorage",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName1": "spektrapipeus",
    "publicIPAddressName2": "spektrapipwus",
    "publicIPAddressType": "Dynamic",
    "addressPrefix1": "10.0.0.0/16",
    "addressPrefix2": "172.16.0.0/16",
    "virtualNetworkName1": "SpektraVNETeastus",
    "virtualNetworkName2": "SpektraVNETwestus",
    "subnetName1": "SpektraSubnetE1",
    "subnetName2": "SpektraSubnetW1",
    "subnetPrefix1": "10.0.0.0/24",
    "subnetPrefix2": "172.16.0.0/24",
    "location1": "westus2",
    "location2": "westus",
    "subnetRef1": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName1'), variables('subnetName1'))]",
    "subnetRef2": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName2'), variables('subnetName2'))]",
    "nicname1": "spektraniceus",
    "nicname2": "spektranicwus",
    "loadBalancerName": "wus-lb",
    "inboundNatRuleName": "RDP",
    "loadBalancerID": "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
    "loadBalancerPoolID": "[concat(variables('loadBalancerID'),'/backendAddressPools/BackendPool1')]",
    "frontEndIPConfigID": "[concat(variables('loadBalancerID'), '/frontendIPConfigurations/loadBalancerFrontend')]",
    "vmName1": "eastuslinux",
    "vmName2": "eastuswindows",
    "vmName3": "westuswindows"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('StorageAccountName1'), copyIndex(1))]",
      "location": "[variables('location1')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {},
      "copy": {
        "name": "storage",
        "count": 2
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-11-01",
      "name": "[variables('StorageAccountName2')]",
      "location": "[variables('location2')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('publicIPAddressName1'), copyIndex(1))]",
      "location": "[variables('location1')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      },
      "copy": {
        "name": "publicip",
        "count": 2
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPAddressName2')]",
      "location": "[variables('location2')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName1')]",
      "location": "[variables('location1')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix1')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName1')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix1')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('virtualNetworkName2')]",
      "location": "[variables('location2')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix2')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName2')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix2')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('nicname1'), copyIndex(1))]",
      "location": "[variables('location1')]",
      "dependsOn": [
        "publicip",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName1'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName1'), copyIndex(1)))]"
              },
              "subnet": {
                "id": "[variables('subnetRef1')]"
              }
            }
          }
        ]
      },
      "copy": {
        "name": "nic",
        "count": 2
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[variables('nicname2')]",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef2')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('loadBalancerPoolID')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('loadBalancerID'),'/inboundNatRules/', 'RDP')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-08-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName2'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName2'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontend",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName2'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "apiVersion": "2015-06-15",
      "name": "[concat(variables('loadBalancerName'), '/', 'RDP')]",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('frontEndIPConfigID')]"
        },
        "protocol": "Tcp",
        "frontendPort": 5000,
        "backendPort": 3389,
        "enableFloatingIP": false
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName3')]",
      "location": "[variables('location2')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName2'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName2'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[variables('vmName3')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('VmName3'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName2'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName2'))).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName2')]",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', 'spektraeastusstorage2')]",
        "[resourceId('Microsoft.Network/networkInterfaces/', 'spektraniceus2')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[variables('vmName2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('VmName2'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', 'spektraniceus2')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', 'spektraeastusstorage2')).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[variables('vmName1')]",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', 'spektraeastusstorage1')]",
        "[resourceId('Microsoft.Network/networkInterfaces/', 'spektraniceus1')]"

      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[variables('vmName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04.0-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('VmName1'), '_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces/', 'spektraniceus1')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', 'spektraeastusstorage1')).primaryEndpoints.blob]"
          }
        }
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName1'),'/apache-script')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/akamalsha23/spektra-task/master/ARM_template/install_apache.sh"
          ],
          "commandToExecute": "sh install_apache.sh"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName2'),'/iis-script')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location1')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName1'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.19",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "https://github.com/akamalsha23/spektra-task/blob/master/ARM_template/install_iis.ps1.zip?raw=true",
          "ConfigurationFunction": "install_iis.ps1\\IISWebserver",
          "Properties": {
            "MachineName": "[variables('vmName2')]"
          }
        },
        "protectedSettings": null
      }
    }
  ],
      "outputs": {
        "LoadBalancerWUSPIP": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses','spektrapipwus')).IpAddress]"
        },
        "WindowsEUSPIP": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses/', 'spektrapipeus2')).IpAddress]"
        },
        "LinuxEUSPIP": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses/', 'spektrapipeus1')).IpAddress]"
       } 
    }
}
